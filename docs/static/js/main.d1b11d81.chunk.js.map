{"version":3,"sources":["components/AddCatgory.js","helpers/getGifs.js","components/GifGridItems.js","components/GifGrid.js","hooks/useFetchGif.js","GifExpertApp.js","index.js"],"names":["AddCatgory","setCategorias","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","categoria","a","url","encodeURI","fetch","res","json","data","gif","map","img","id","title","images","downsized_medium","GifGridItems","className","src","alt","GifGrid","loading","state","setState","useEffect","then","useFetchGif","gifs","imgs","GifExpertApp","categorias","ReactDOM","render","document","getElementById"],"mappings":"mMAGaA,EAAa,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EACTC,mBAAS,IADA,mBACtCC,EADsC,KAC1BC,EAD0B,KAc7C,OACE,8BACE,sBAAMC,SATW,SAACC,GAClBA,EAAEC,iBACEJ,EAAWK,OAAOC,OAAO,IAC3BR,GAAc,SAAAS,GAAI,OAAKP,GAAL,mBAAmBO,OACrCN,EAAc,MAKhB,SACE,uBAAOO,KAAK,OAAOC,MAAOT,EAAYU,SAblB,SAACP,GACzBF,EAAcE,EAAEQ,OAAOF,e,+BCNdG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACbC,EADa,iDACmCC,UAAUH,GAD7C,+DAEDI,MAAMF,GAFL,cAEbG,EAFa,gBAGIA,EAAIC,OAHR,uBAGXC,EAHW,EAGXA,KACFC,EAAMD,EAAKE,KAAI,SAACC,GACpB,MAAO,CACLC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAKQ,EAAIG,OAAOC,iBAAiBZ,QARlB,kBAWZM,GAXY,4CAAH,sDCAPO,EAAe,SAAC,GAAkB,IAAjBH,EAAgB,EAAhBA,MAAOV,EAAS,EAATA,IAEjC,OACI,sBAAKc,UAAU,6CAAf,UACI,qBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,4BAAIA,QCFHO,EAAU,SAAC,GAAmB,IAAjBnB,EAAgB,EAAhBA,UAAgB,ECDf,SAACA,GAAe,IAAD,EAEZd,mBAAS,CAC/BqB,KAAM,GACNa,SAAS,IAJyB,mBAE/BC,EAF+B,KAExBC,EAFwB,KAoBtC,OAbAC,qBAAW,WACPxB,EAAQC,GACHwB,MAAK,SAACd,GAEHY,EAAS,CACTf,KAAMG,EACNU,SAAS,SAKlB,CAACpB,IAEGqB,EDjBwBI,CAAYzB,GAApCoB,EAF+B,EAE/BA,QAAeM,EAFgB,EAEtBnB,KAOlB,OACE,qCACE,oBAAIS,UAAU,wCAAd,SAAuDhB,IACtDoB,GAAW,mBAAGJ,UAAU,wCAAb,sBACZ,qBAAKA,UAAU,YAAf,SACGU,EAAKjB,KAAI,SAACkB,GAAD,OACR,cAAC,EAAD,eAAgCA,GAAbA,EAAKhB,aEOnBiB,EAvBM,WAAO,IAAD,EAGa1C,mBAAS,CAAC,cAHvB,mBAGhB2C,EAHgB,KAGJ5C,EAHI,KAMvB,OACI,gCACI,+CACA,cAAC,EAAD,CAAYA,cAAiBA,IAC7B,uBACA,6BAEQ4C,EAAWpB,KAAI,SAAAT,GAAS,OACnB,cAAC,EAAD,CAAyBA,UAAWA,GAAtBA,Y,MCZvC8B,IAASC,OAAO,cAAC,EAAD,IAAkBC,SAASC,eAAe,W","file":"static/js/main.d1b11d81.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCatgory = ({setCategorias}) => {\r\n  const [inputValue, setInputValue] = useState('');\r\n  \r\n\r\n  const handleInputChange = (e) => {\r\n    setInputValue(e.target.value);\r\n  };\r\n  const handleSubmit = (e) => {\r\n      e.preventDefault();\r\n      if (inputValue.trim().length>2){\r\n        setCategorias(cats => [inputValue,...cats])\r\n        setInputValue('')\r\n      }\r\n  }\r\n  return (\r\n    <div>\r\n      <form onSubmit={handleSubmit}>\r\n        <input type=\"text\" value={inputValue} onChange={handleInputChange} />\r\n      </form>\r\n    </div>\r\n  );\r\n  }\r\n  AddCatgory.propTypes = {\r\n    setCategorias: PropTypes.func.isRequired\r\n}\r\n\r\n","\r\n\r\nexport const getGifs = async (categoria) => {\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(categoria)}&limit=10&api_key=bENsSuXDsJlTfKzaJa4fwDJ5RVRYzsj6`;\r\n    const res = await fetch(url);\r\n    const { data } = await res.json();\r\n    const gif = data.map((img) => {\r\n      return {\r\n        id: img.id,\r\n        title: img.title,\r\n        url: img.images.downsized_medium.url,\r\n      };\r\n    });\r\n    return gif;\r\n  };","import React from 'react'\r\n\r\nexport const GifGridItems = ({title, url}) => {\r\n    \r\n    return (\r\n        <div className=\"card animate__animated animate__rubberBand\">\r\n            <img src={url} alt={title} />\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from \"react\";\r\nimport { useFetchGif } from \"../hooks/useFetchGif\";\r\n// import { getGifs } from \"../helpers/getGifs\";\r\nimport { GifGridItems } from \"./GifGridItems\";\r\n\r\nexport const GifGrid = ({ categoria }) => {\r\n\r\n    const {loading, data: gifs } = useFetchGif(categoria);\r\n  //const [img, setImg] = useState([]);\r\n\r\n\r\n\r\n  \r\n\r\n  return (\r\n    <>\r\n      <h3 className=\"animate__animated animate__rubberBand\">{categoria}</h3>\r\n      {loading && <p className=\"animate__animated animate__rubberBand\">Cargando</p>   }\r\n      <div className=\"card-grid\">\r\n        {gifs.map((imgs) => (\r\n          <GifGridItems key={imgs.id} {...imgs} />\r\n        ))}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n","import { useEffect, useState } from \"react\";\r\nimport {getGifs} from '../helpers/getGifs';\r\n\r\n\r\nexport const useFetchGif = (categoria) => {\r\n\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect( () => {\r\n        getGifs(categoria)\r\n            .then((img)=>{\r\n                \r\n                setState({\r\n                data: img,\r\n                loading: false\r\n                });\r\n                \r\n                \r\n            })\r\n    }, [categoria] )\r\n    \r\n    return state;\r\n}","import React, { useState } from 'react'\r\nimport { AddCatgory } from './components/AddCatgory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nconst GifExpertApp = () => {\r\n\r\n    \r\n    const [categorias, setCategorias] = useState(['One Piece']);\r\n\r\n    \r\n    return (\r\n        <div>\r\n            <h2>GiftExpertApp</h2>\r\n            <AddCatgory setCategorias = {setCategorias} />\r\n            <hr/>\r\n            <ol>\r\n                {\r\n                    categorias.map(categoria => (\r\n                         <GifGrid key={categoria} categoria={categoria} />\r\n                    ) )\r\n                }\r\n            </ol>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GifExpertApp\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp';  \nimport './index.css';\n\n\nReactDOM.render(<GifExpertApp />, document.getElementById('root'));\n\n\n"],"sourceRoot":""}